# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Sd4MuWhxAkAV5gAssv4gh7NV-xK831aA
"""

import pandas as pd
from sklearn.cluster import AgglomerativeClustering, KMeans
from sklearn.preprocessing import StandardScaler

# Carregando a base de dados
df = pd.read_csv('https://raw.githubusercontent.com/LuizCunha2309/AC-DATA-MINING/main/eth_price/eth_price.csv', thousands=',').replace(
    {'Price': '[$,]'}, {'Price': ''}, regex=True
).astype({'Price': 'float'})

# Selecionando as colunas relevantes para o agrupamento
X = df[['Open', 'High', 'Low', 'Price']]

# Padronizando os dados
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Agglomerative Clustering
agglomerative_cluster = AgglomerativeClustering(n_clusters=2)
agglomerative_labels = agglomerative_cluster.fit_predict(X_scaled)

# K-means Clustering
kmeans = KMeans(n_clusters=2, random_state=42)
kmeans_labels = kmeans.fit_predict(X_scaled)

# Adicionando os resultados dos agrupamentos ao DataFrame original
df['Agglomerative Cluster'] = agglomerative_labels
df['K-means Cluster'] = kmeans_labels

# Visualizando os resultados
print("Resultados do Agglomerative Clustering:")
print(df[['Open', 'High', 'Low', 'Price', 'Agglomerative Cluster']].head())

print("\nResultados do K-means Clustering:")
print(df[['Open', 'High', 'Low', 'Price', 'K-means Cluster']].head())
